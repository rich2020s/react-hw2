{"version":3,"sources":["hasWinner/index.js","hasWinner/hasWinner.js","components/components.js","App.js","index.js"],"names":["hasWinner","x","y","board","dataSize","count","i","rowHasWinner","columnHasWinner","backSlashHasWinner","slashHasWinner","Container","styled","div","Block","props","indexX","indexY","Title","h1","StateInfo","ClickBlock","color","winner","blackIsNext","App","useState","setX","setY","setWinner","nextInfo","setNextInfo","Array","size","fill","setBoard","useEffect","id","map","row","style","display","block","onClick","value","newBoard","JSON","parse","stringify","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1694c222.chunk.js","sourcesContent":["import hasWinner from \"./hasWinner\"\nexport default hasWinner \n","export default function hasWinner(x, y, board, dataSize) {\n  if (x === \"\" || y === \"\") return;\n  function columnHasWinner() {\n    let count = 0;\n    for (let i = 1; i < 5; i++) {\n      if (y + i >= dataSize) break;\n      if (board[y][x] === board[y + i][x] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 5; i++) {\n      if (y - i < 0) break;\n      if (board[y][x] === board[y - i][x] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    if (count >= 4) return true;\n    return false;\n  }\n  function rowHasWinner() {\n    let count = 0;\n    for (let i = 1; i < 5; i++) {\n      if (x + i >= dataSize) break;\n      if (board[y][x] === board[y][x + i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 5; i++) {\n      if (x - i < 0) break;\n      if (board[y][x] === board[y][x - i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    if (count >= 4) return true;\n    return false;\n  }\n  function backSlashHasWinner() {\n    let count = 0;\n    for (let i = 1; i < 5; i++) {\n      if (x + i >= dataSize || y + i >= dataSize) break;\n      if (board[y][x] === board[y + i][x + i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 5; i++) {\n      if (x - i < 0 || y - i < 0) break;\n      if (board[y][x] === board[y - i][x - i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    if (count >= 4) return true;\n    return false;\n  }\n  function slashHasWinner() {\n    let count = 0;\n    for (let i = 1; i < 5; i++) {\n      if (x + i >= 20 || y - i < 0) break;\n      if (board[y][x] === board[y - i][x + i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 5; i++) {\n      if (x - i < 0 || y + i >= dataSize) break;\n      if (board[y][x] === board[y + i][x - i] && board[y][x] !== null) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    if (count >= 4) return true;\n    return false;\n  }\n  if (\n    rowHasWinner() ||\n    columnHasWinner() ||\n    backSlashHasWinner() ||\n    slashHasWinner()\n  )\n    return true;\n  return false;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Block = styled.div`\n  height: 45px;\n  width: 45px;\n  background-color: ${(props) =>\n    props.indexX === 19 || props.indexY === 19 ? \"transparent\" : \"#ccc\"};\n  border: 1px solid\n    ${(props) =>\n      props.indexX === 19 || props.indexY === 19 ? \"transparent\" : \"black\"};\n  position: relative;\n`;\nexport const Title = styled.h1``;\nexport const StateInfo = styled.div`\n  margin-bottom: 20px;\n`;\nexport const ClickBlock = styled.div`\n  position: absolute;\n  top: -52.5%;\n  left: -52.5%;\n  border: ${(props) => (props.color === null ? \"0\" : \"1px\")} solid black;\n  border-radius: 50%;\n  transform: scale(0.75);\n  width: 100%;\n  height: 100%;\n  background-color: ${(props) =>\n    props.color === null ? \"transparent\" : props.color};\n  :hover {\n    background-color: ${(props) =>\n      props.winner === null\n        ? props.color === null\n          ? props.blackIsNext\n            ? \"black\"\n            : \"white\"\n          : props.color\n        : \"\"};\n    border: ${(props) => (props.winner ? \"0px\" : \"1px\")} solid black;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport hasWinner from \"./hasWinner\";\nimport { Container, Block, Title, StateInfo, ClickBlock } from \"./components\";\n\nlet blackIsNext = true;\nfunction App() {\n  const size = 19;\n  const dataSize = size + 1;\n  const [x, setX] = useState(\"\");\n  const [y, setY] = useState(\"\");\n  const [winner, setWinner] = useState(null);\n  const [nextInfo, setNextInfo] = useState(\"\");\n  const [board, setBoard] = useState(\n    Array(dataSize).fill(Array(dataSize).fill(null))\n  );\n  useEffect(() => {\n    blackIsNext ? setNextInfo(\"換黑子\") : setNextInfo(\"換白子\");\n    if (hasWinner(x, y, board, dataSize) === true) {\n      setWinner(board[y][x]);\n      setNextInfo(winner === \"black\" ? \"黑子贏了！\" : \"白子贏了！\");\n    }\n  }, [board, x, y, dataSize, winner]);\n\n  function handleClick(indexX, indexY, value) {\n    if (value !== null) return;\n    if (winner !== null) return;\n    setY(indexY);\n    setX(indexX);\n    const newBoard = JSON.parse(JSON.stringify(board));\n    newBoard[indexY][indexX] = blackIsNext ? \"black\" : \"white\";\n    setBoard(newBoard);\n    blackIsNext = !blackIsNext;\n  }\n  return (\n    <Container>\n      <Title>五子棋</Title>\n      <StateInfo id=\"state\">{nextInfo}</StateInfo>\n      {board.map((row, indexY) => {\n        return (\n          <div key={indexY} style={{ display: \"flex\" }}>\n            {row.map((block, indexX) => {\n              return (\n                <Block key={indexX} indexX={indexX} indexY={indexY}>\n                  <ClickBlock\n                    color={block}\n                    onClick={() => handleClick(indexX, indexY, block)}\n                    blackIsNext={blackIsNext}\n                    winner={winner}\n                  />\n                </Block>\n              );\n            })}\n          </div>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}